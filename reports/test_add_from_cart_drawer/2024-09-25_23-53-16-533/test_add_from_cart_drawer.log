No product errors.

Test defect error:
page = <Page url='https://www.overstock.com/search?q=bracelet'>

    def test_add_from_cart_drawer(page: Page):
        cart: List[Dict] = []
        items_quantities_add = [4, 1]
        items_quantities_change = [2, 3]
        page.goto("https://www.overstock.com/")
    
        # home page
        home_page = HomePage(page)
        home_page.close_dialog()
        home_page.search_for("bracelet")
        results_page = ResultsPage(page)
        for iterator in range(len(items_quantities_add)):
            item_data = results_page.return_item_data(iterator)
            results_page.create_item(cart, item_data)
            results_page.click_item(iterator)
            new_tab = page.context.wait_for_event('page')
            new_tab.wait_for_load_state()
            # item page
            item_page = ItemPage(new_tab)
>           item_page.validate_item_data(cart)

add_products\test_addFromCartDrawer.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\overstock\pages\itemPage.py:57: in validate_item_data
    self.find_option_price(item["original_price"])
..\overstock\pages\itemPage.py:42: in find_option_price
    actual_price = self.extract_clean_text(self.item_price.inner_text(), "$", True)
..\venv\lib\site-packages\playwright\sync_api\_generated.py:16500: in inner_text
    self._sync(self._impl_obj.inner_text(timeout=timeout))
..\venv\lib\site-packages\playwright\_impl\_locator.py:444: in inner_text
    return await self._frame.inner_text(
..\venv\lib\site-packages\playwright\_impl\_frame.py:618: in inner_text
    return await self._channel.send("innerText", locals_to_params(locals()))
..\venv\lib\site-packages\playwright\_impl\_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <playwright._impl._connection.Connection object at 0x000002066DD48AC0>
cb = <function Channel.send.<locals>.<lambda> at 0x000002066DCC70A0>
is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -> Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
>           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.Error: Locator.inner_text: Error: strict mode violation: locator(".product-info__price .price__current strong") resolved to 2 elements:
E               1) <strong class="ostk-on-sale">↵      ↵        Sale↵      $13.63↵↵    </strong> aka get_by_text("Sale $")
E               2) <strong class="price__current">Unavailable</strong> aka locator("strong").filter(has_text="Unavailable").first
E           
E           Call log:
E           waiting for locator(".product-info__price .price__current strong")

..\venv\lib\site-packages\playwright\_impl\_connection.py:514: Error
